package co.com.bvc.portal.mercados.servicio.imp;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.BeanUtils;

import co.com.bvc.portal.comun.excepcion.PersistenciaException;
import co.com.bvc.portal.comun.servicio.IServicioUtil;
import co.com.bvc.portal.mercados.modelo.BusquedaDerivados;
import co.com.bvc.portal.mercados.modelo.Derivado;
import co.com.bvc.portal.mercados.modelo.DerivadoCaracteristicasContrato;
import co.com.bvc.portal.mercados.modelo.DerivadoResumen;
import co.com.bvc.portal.mercados.modelo.DerivadoResumenContrato;
import co.com.bvc.portal.mercados.modelo.DerivadoResumenExtendido;
import co.com.bvc.portal.mercados.modelo.DerivadosAutocomplete;
import co.com.bvc.portal.mercados.modelo.MercadoDerivados;
import co.com.bvc.portal.mercados.persistencia.IDerivadosDao;
import co.com.bvc.portal.mercados.servicio.IDerivados;

// TODO: Auto-generated Javadoc
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Derivados.java
//  @ Date : 03/09/2008
//  @ Author : 
//
//

/**
 * The Class Derivados.
 */
public class Derivados implements IDerivados{

	/** The derivados dao. */
	private IDerivadosDao derivadosDao;

	/** The tipos contrato. */
	private HashMap<String, String> tiposContrato;

	/** The servicio util. */
	private IServicioUtil servicioUtil;

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * co.com.bvc.portal.mercados.servicio.IDerivados#getDerivados(java.lang
	 * .String)
	 */
	public Set<Derivado> getDerivados(BusquedaDerivados busqueda)
			throws Exception {
		Set<Derivado> result = new LinkedHashSet<Derivado>();
		if (BusquedaDerivados.isBusquedaVacia(busqueda) || BusquedaDerivados.isFechaHoy(busqueda)) {
			Iterator<String> itTipos = getTiposContrato().keySet().iterator();
			boolean tipoOpcion = busqueda.getTipoContrato() != null && busqueda.getTipoContrato().trim().length() > 0;
			while (itTipos.hasNext()) {
				String opcion = itTipos.next();
				if (tipoOpcion){
					if (opcion.equalsIgnoreCase(busqueda.getTipoContrato())){
						Set<DerivadoResumen> res = derivadosDao.getDerivados(opcion,
								getTiposContrato().get(opcion));
						if (noVacio(res)) {
							Derivado der = new Derivado();
							der.setSiglaDerivado(opcion);
							der.setNombreDerivado(getTiposContrato().get(opcion));
							der.setDerivadosResumen(res);
							result.add(der);
						}
					}
				}else{
					Set<DerivadoResumen> res = derivadosDao.getDerivados(opcion,
							getTiposContrato().get(opcion));
					if (noVacio(res)) {
						Derivado der = new Derivado();
						der.setSiglaDerivado(opcion);
						der.setNombreDerivado(getTiposContrato().get(opcion));
						der.setDerivadosResumen(res);
						result.add(der);
					}
				}
			}
		}
		else {
			//solo debe llegar en un día pasado
			Set<DerivadoResumen> query = derivadosDao.getDerivados(busqueda);
			result = setResultado(query);
		}
		for (Iterator<Derivado> iterator = result.iterator(); iterator
				.hasNext();) {
			Derivado derivado = (Derivado) iterator.next();
			if (!BusquedaDerivados.isBusquedaVacia(busqueda)
					&& StringUtils.isNotEmpty(busqueda.getTipoContrato())
					&& !tiposContrato.get(busqueda.getTipoContrato())
							.equalsIgnoreCase(derivado.getNombreDerivado()))
				iterator.remove();
			else {
				for (Iterator<DerivadoResumen> iterator2 = derivado
						.getDerivadosResumen().iterator(); iterator2.hasNext();) {
					DerivadoResumen derivadoRes = (DerivadoResumen) iterator2
							.next();
					if ("OPCF".equalsIgnoreCase(busqueda.getTipoContrato()) || "OPCF".equalsIgnoreCase(derivado.getNombreDerivado())){
						derivadoRes.setDerivadosExtendidos(derivadosDao
								.getDerivadosExtendidos(derivadoRes.getNemo(),
										busqueda));
					}else{
						derivadoRes.setDerivadosExtendidos(derivadosDao
								.getDerivadosExtendidos(derivadoRes.getContrato(),
										busqueda));
					}
				}
			}
		}
		return result;
	}

	/**
	 * Sets the resultado.
	 * 
	 * @param query the query
	 * 
	 * @return the set< derivado>
	 */
	private Set<Derivado> setResultado(Set<DerivadoResumen> query) {
		Set<Derivado> result = new LinkedHashSet<Derivado>();
		if (query != null && !query.isEmpty()){
			for (Iterator<DerivadoResumen> iterator = query.iterator(); iterator
					.hasNext();) {
				
				DerivadoResumen derRes = (DerivadoResumen) iterator.next();
				
				boolean esta = false;
				
				for (Derivado derivado : result) {
					if (derRes.getNemo().equals(derivado.getSiglaDerivado())){
						esta = true;
						if (derivado.getDerivadosResumen() == null){
							derivado.setDerivadosResumen(new HashSet<DerivadoResumen>());
						}
						derivado.getDerivadosResumen().add(derRes);
					}
				}
				
				if (!esta){
					Derivado der = new Derivado();
					der.setSiglaDerivado(derRes.getNemo());
					der.setNombreDerivado(getTiposContrato().get(derRes.getNemo()));
					if (der.getDerivadosResumen() == null){
						der.setDerivadosResumen(new HashSet<DerivadoResumen>());
					}
					der.getDerivadosResumen().add(derRes);
					result.add(der);
				}
				
				derRes.setNemo(null);
					
				
			}
		}
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * co.com.bvc.portal.mercados.servicio.IDerivados#getDerivadoResumenContrato
	 * (java.lang.String)
	 */
	public DerivadoResumenContrato getDerivadoResumenContrato(String nemo,BusquedaDerivados busquedaDerivados) throws Exception {
		DerivadoResumenContrato result = new DerivadoResumenContrato();
		DerivadoResumenExtendido rExt = derivadosDao.getDerivadoResumenExtendido(nemo, busquedaDerivados);
		BeanUtils.copyProperties(rExt, result);
		result.setPrecioApertura(derivadosDao.getPrecioApertura(nemo,busquedaDerivados));
		result.setPrecioMayor(derivadosDao.getPrecioMayorContrato(nemo,busquedaDerivados));
		result.setPrecioMenor(derivadosDao.getPrecioMenorContrato(nemo,busquedaDerivados));
		result.setUltimaOperacion(derivadosDao.getUltimaOperacionDerivado(nemo,busquedaDerivados));
		if (StringUtils.isNotEmpty(busquedaDerivados.getDiaFecha())
				&& StringUtils.isNotEmpty(busquedaDerivados.getMesFecha())
				&& StringUtils.isNotEmpty(busquedaDerivados.getAnioFecha())) {
			result.setMejorBid(derivadosDao
					.getMejorBid(nemo, busquedaDerivados));
			result.setMejorOffer(derivadosDao.getMejorOffer(nemo,busquedaDerivados));
		} else {
			result.setMejorBid(derivadosDao.getMejorBid(nemo, null));
			result.setMejorOffer(derivadosDao.getMejorOffer(nemo, null));
		}
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * co.com.bvc.portal.mercados.servicio.IDerivados#getDerivadoResumenContrato
	 * (java.lang.String)
	 */
	public DerivadoResumenContrato getDerivadoResumenContratoOPCF(String nemo,
			BusquedaDerivados busquedaDerivados) throws Exception {
		DerivadoResumenContrato result = new DerivadoResumenContrato();
		DerivadoResumenExtendido rExt = derivadosDao
				.getDerivadoResumenExtendidoOPCF(nemo, busquedaDerivados);
		BeanUtils.copyProperties(rExt, result);
		result.setPrecioApertura(derivadosDao.getPrecioAperturaOPCF(nemo,
				busquedaDerivados));
		result.setPrecioMayor(derivadosDao.getPrecioMayorContratoOPCF(nemo,
				busquedaDerivados));
		result.setPrecioMenor(derivadosDao.getPrecioMenorContratoOPCF(nemo,
				busquedaDerivados));
		result.setUltimaOperacion(derivadosDao.getUltimaOperacionDerivadoOPCF(
				nemo, busquedaDerivados));
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * co.com.bvc.portal.mercados.servicio.IDerivados#obtenerTotalContratosUltDia
	 * ()
	 */
	public Float obtenerTotalContratosUltDia() {
		Float ret = 0f;
		try {
			ret = (derivadosDao.obtenerTotalContratosUltDia()).floatValue();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return ret;
	}

	/**
	 * No vacio.
	 * 
	 * @param res the res
	 * 
	 * @return true, if successful
	 */
	private boolean noVacio(Set<DerivadoResumen> res) {
		if (res == null)
			return false;
		if (res.isEmpty())
			return false;
		if (res.size() == 1) {
			DerivadoResumen dr = res.iterator().next();
			if (dr.getContratos() == 0 && dr.getOpenInterest() == 0
					&& dr.getVolumen() == 0)
				return false;
		}
		return true;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * co.com.bvc.portal.mercados.servicio.IDerivados#getMercadoDerivados(co
	 * .com.bvc.portal.mercados.modelo.BusquedaDerivados)
	 */
	public Set<MercadoDerivados> getMercadoDerivados(
			BusquedaDerivados busquedaDerivados) throws Exception {
		if (BusquedaDerivados.isFechaVacia(busquedaDerivados)
				|| BusquedaDerivados.isFechaHoy(busquedaDerivados)) {
			Calendar cal = new GregorianCalendar();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
			cal.add(Calendar.DAY_OF_YEAR, -1);
			cal = servicioUtil.getUltimoDiaHabilBursatil(cal);
			return derivadosDao.getMercadoDerivados(sdf.format(cal.getTime()));
		}
		return derivadosDao.getMercadoDerivadosHistoria(busquedaDerivados);
	}

	/**
	 * Sets the derivados dao.
	 * 
	 * @param derivadosDao the derivadosDao to set
	 */
	public void setDerivadosDao(IDerivadosDao derivadosDao) {
		this.derivadosDao = derivadosDao;
	}

	/**
	 * Sets the tipos contrato.
	 * 
	 * @param tiposContrato the tiposContrato to set
	 */
	public void setTiposContrato(HashMap<String, String> tiposContrato) {
		this.tiposContrato = tiposContrato;
	}

	/**
	 * Gets the tipos contrato.
	 * 
	 * @return the tiposContrato
	 */
	public HashMap<String, String> getTiposContrato() {
		return tiposContrato;
	}

	/* (non-Javadoc)
	 * @see co.com.bvc.portal.mercados.servicio.IDerivados#derivadosTodas()
	 */
	public List<DerivadosAutocomplete> derivadosTodas() {
		List<DerivadosAutocomplete> res = new ArrayList<DerivadosAutocomplete>();
		try {
			res = this.derivadosDao.getAccionesTodas();
		} catch (PersistenciaException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return res;
	}

	/**
	 * Gets the servicio util.
	 * 
	 * @return the servicio util
	 */
	public IServicioUtil getServicioUtil() {
		return servicioUtil;
	}

	/**
	 * Sets the servicio util.
	 * 
	 * @param servicioUtil the new servicio util
	 */
	public void setServicioUtil(IServicioUtil servicioUtil) {
		this.servicioUtil = servicioUtil;
	}

	public DerivadoCaracteristicasContrato getCaracteristicasContrato(
			String nemo, BusquedaDerivados busquedaDerivados) {
		
		DerivadoCaracteristicasContrato caracteristicas = new DerivadoCaracteristicasContrato();
		
		try {
			caracteristicas = derivadosDao.getDerivadoResumenContrato(nemo, busquedaDerivados);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return caracteristicas;	
	}

	public Set<DerivadoResumenExtendido> getDerivadosDia(String nemoDerivado,
			BusquedaDerivados busquedaDerivados) {
		Set<DerivadoResumenExtendido> result = new LinkedHashSet<DerivadoResumenExtendido>();
		try {
			result.addAll(derivadosDao.getDerivadosDia(nemoDerivado, busquedaDerivados));
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return result;	
	}

	public List<DerivadoResumenExtendido> getDerivadoResumenExtendidoGrafica(String nemo,BusquedaDerivados busquedaDerivados) throws Exception {
		return derivadosDao.getDerivadoResumenExtendidoGrafica(nemo, busquedaDerivados);
	}
}